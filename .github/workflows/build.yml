name: build
on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@master
    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: bash -l {0}
      run: |
           conda install --yes pyyaml pip traitlets traittypes jupyter pysb atomizer matplotlib networkx coveralls pytest nbval pytest-cov coverage python-louvain -c alubbock -c conda-forge
    - name: Install tellurium
      if: matrix.os == 'windows-latest' || matrix.os == 'ubuntu-latest'
      shell: bash -l {0}
      run: pip install tellurium
    - name: Install PyViPR
      shell: bash -l {0}
      run: |
        python -m pip install .
    - name: Test with pytest in macos
      if: matrix.os == 'macos-latest'
      shell: bash -l {0}
      run: |
        pytest --nbval --sanitize-with docs/pytest-sanitize.ini --cov=pyvipr --ignore=docs/tellurium_examples.ipynb \
        --ignore=binder/tellurium_example.ipynb
    - name: Test with pytest in ubuntu and windows
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
      shell: bash -l {0}
      run: |
        pytest --nbval --sanitize-with docs/pytest-sanitize.ini --cov=pyvipr
    - name: Create distribution
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.os == 'macOS-latest' && matrix.python-version == 3.7
      shell: bash -l {0}
      run: python setup.py sdist bdist_wheel
    - name: Publish package to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.os == 'macOS-latest' && matrix.python-version == 3.7
      uses: ortega2247/pypi-upload-action@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
